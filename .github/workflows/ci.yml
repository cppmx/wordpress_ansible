name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  unit-tests:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Vagrant boxes
        uses: actions/cache@v2
        with:
          path: ~/.vagrant.d/boxes
          key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
          restore-keys: |
            ${{ runner.os }}-vagrant-

      - name: Start Ubuntu VMs
        run: |
          brew update; brew install ansible;
          vagrant plugin install vagrant-env
          vagrant up

      - name: Validate Ubuntu VMs
        run: |
          vagrant status

      - name: Test MySQL on Ubuntu
        run: |
          vagrant ssh database -c "sudo ss -tlnp | grep LISTEN | grep ':3306'"
          vagrant ssh database -c "sudo mysql -u root -e 'SELECT 1'"
          vagrant ssh database -c "sudo mysql -u root -e 'SELECT user FROM mysql.user WHERE user = \"wordpress\";'"

      - name: Test Wordpress on Ubuntu
        run: |
          vagrant ssh wordpress -c "sudo ss -tlnp | grep LISTEN | grep ':8080'"
          test $(vagrant ssh wordpress -c "curl -s -o /dev/null -w '%{http_code}' http://localhost:8080/") -lt 400

      - name: Test Proxy on Ubuntu
        run: |
          vagrant ssh proxy -c "sudo ss -tlnp | grep LISTEN | grep ':80'"
          test $(vagrant ssh wordpress -c "curl -s -o /dev/null -w '%{http_code}' http://localhost/") -lt 400

      - name: Tear down Ubuntu VMs
        run: |
          vagrant destroy -f

      - name: Start CentOS VMs
        run: |
          vagrant plugin install vagrant-env
          vagrant up

      - name: Validate CentOS VMs
        run: |
          vagrant status

      - name: Test MySQL on CentOS
        run: |
          vagrant ssh database -c "sudo ss -tlnp | grep LISTEN | grep ':3306'"
          vagrant ssh database -c "sudo mysql -u root -e 'SELECT 1'"
          vagrant ssh database -c "sudo mysql -u root -e 'SELECT user FROM mysql.user WHERE user = \"wordpress\";'"

      - name: Test Wordpress on CentOS
        run: |
          vagrant ssh wordpress -c "sudo ss -tlnp | grep LISTEN | grep ':8080'"
          test $(vagrant ssh wordpress -c "curl -s -o /dev/null -w '%{http_code}' http://localhost:8080/") -lt 400

      - name: Test Proxy on CentOS
        run: |
          vagrant ssh proxy -c "sudo ss -tlnp | grep LISTEN | grep ':80'"
          test $(vagrant ssh wordpress -c "curl -s -o /dev/null -w '%{http_code}' http://localhost/") -lt 400

      - name: Tear down CentOS VMs
        run: |
          vagrant destroy -f
